<mxfile host="app.diagrams.net" modified="2022-04-21T19:31:31.055Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36" etag="0y05UcNhB0KrwRHaWztW" version="17.4.6" type="github">
  <diagram id="rs5LrS3yjigf87WkTgGt" name="Page-1">
    <mxGraphModel dx="2328" dy="622" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1600" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="gYe92Rgtv7boX88liuPo-2" value="&lt;b&gt;&lt;font style=&quot;font-size: 17px&quot;&gt;Meta-RL&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-312.5" y="10" width="102.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-4" value="&lt;b&gt;Online&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="130" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-8" value="" style="endArrow=none;html=1;rounded=0;entryX=0.432;entryY=-0.027;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-2" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-130" y="250" as="sourcePoint" />
            <mxPoint x="110" y="400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-9" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-2" target="gYe92Rgtv7boX88liuPo-434" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="60" y="450" as="sourcePoint" />
            <mxPoint x="-180" y="250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-12" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-1140" y="135" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-434" value="&lt;b&gt;Offline&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-810" y="50" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-440" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-12" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="420" as="sourcePoint" />
            <mxPoint x="30" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-441" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-915" y="135" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-443" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-457.5" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-445" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-441" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="320" as="sourcePoint" />
            <mxPoint x="30" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-448" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;startArrow=none;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="320" as="sourcePoint" />
            <mxPoint x="30" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-452" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-222.5" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-453" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="20" y="135" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-454" value="&lt;b&gt;Hybrid&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="265" y="135" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-455" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="495.5" y="140" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-457" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-452" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="30" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-458" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-453" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-459" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-454" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-460" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-455" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-467" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-605" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-270" y="130" as="sourcePoint" />
            <mxPoint x="-457.5" y="129.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-585" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-12" target="gYe92Rgtv7boX88liuPo-595" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-390" y="400" as="sourcePoint" />
            <mxPoint x="-900" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-595" value="Meta-RL Offline Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-1191" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-1" value="&lt;h4&gt;Model-based Offline Meta-Reinforcement Learning with Regularization&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sen Lin, et.al : ICLR 2022)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="10" y="40" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-2" value="&lt;h1&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;fontSize=17;fontColor=#46495D;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="15" y="230" width="190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-5" value="&lt;h4&gt;The Reflective Explorer: Online Meta-Exploration from Offline Data in Realistic Robotic Tasks&lt;/h4&gt;&lt;h4&gt;(Chelsea Finn, et.al : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="10" y="250" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-596" value="Meta-RL Offline Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-960" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-6" value="&lt;h4&gt;Offline Meta-RL with Online Self-Supervision&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, et.al : ICLR 2022 - Reject )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="5" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-7" value="&lt;h4&gt;Skill-based Meta-RL&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Taewook Nam, et.al : NIPS 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="5" y="250" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-8" value="&lt;h4&gt;Offline Meta-Learning of Exploration&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Ron Dorfman, et.al : Learning to Learn 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="6" y="440" width="203" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-9" value="&lt;h4&gt;Offline Meta-RL with Advantage Weighting&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, Chelsea Finn et.al : ICLR 2021 Reject )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="6" y="630" width="203" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-597" value="Meta-RL Offline Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-733" y="210" width="213" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-598" value="Meta-RL Offline Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-510" y="210" width="210" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-603" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-596" target="gYe92Rgtv7boX88liuPo-441" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-800" y="220" as="sourcePoint" />
            <mxPoint x="-750" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-604" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-597" target="gYe92Rgtv7boX88liuPo-605" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-510" y="340" as="sourcePoint" />
            <mxPoint x="-457.5" y="159.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-605" value="&lt;span&gt;&lt;b&gt;Hybrid&lt;/b&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-656.5" y="135" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-607" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-598" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-500" y="330" as="sourcePoint" />
            <mxPoint x="-450" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-610" value="Meta-RL Online Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;" parent="1" vertex="1">
          <mxGeometry x="-280" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-14" value="&lt;h4&gt;Accelerating Online Reinforcement Learning via Model-based Learning&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, et.al : Learning to Learn 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-610" vertex="1">
          <mxGeometry x="7.5" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-15" value="&lt;h4&gt;Model-Based Reinforcement Learning via Meta-Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Pieter Abbeel, et.al : CoRR 2018 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-610" vertex="1">
          <mxGeometry x="7.5" y="230" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-611" value="Meta-RL Online Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-50" y="210" width="230" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-612" value="Meta-RL Online Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;" parent="1" vertex="1">
          <mxGeometry x="190" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-613" value="Meta-RL Online Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="431" y="210" width="219" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-617" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-452" target="gYe92Rgtv7boX88liuPo-610" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-618" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-611" target="gYe92Rgtv7boX88liuPo-453" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-619" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-612" target="gYe92Rgtv7boX88liuPo-454" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-620" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-613" target="gYe92Rgtv7boX88liuPo-455" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-622" value="&lt;font style=&quot;font-size: 17px&quot;&gt;&lt;b&gt;RL&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1727.5" y="10" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-623" value="&lt;b&gt;Online&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2190" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-624" value="" style="endArrow=none;html=1;rounded=0;entryX=0.432;entryY=-0.027;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-622" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1910" y="250" as="sourcePoint" />
            <mxPoint x="2150" y="400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-625" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" target="gYe92Rgtv7boX88liuPo-627" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1770" y="40" as="sourcePoint" />
            <mxPoint x="1860" y="250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-626" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="822.5" y="135" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-627" value="&lt;b&gt;Offline&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1310" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-628" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-626" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="420" as="sourcePoint" />
            <mxPoint x="2070" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-629" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1090" y="135" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-630" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1575" y="135" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-631" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-629" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="320" as="sourcePoint" />
            <mxPoint x="2070" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-632" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;startArrow=none;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-630" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="320" as="sourcePoint" />
            <mxPoint x="2070" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-633" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1870" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-634" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2070" y="135" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-635" value="&lt;b&gt;Hybrid&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2350" y="140" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-636" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2640" y="140" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-637" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-633" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2070" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-638" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-634" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-639" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-635" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-640" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-636" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-641" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-649" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1770" y="130" as="sourcePoint" />
            <mxPoint x="1582.5" y="129.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-642" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-626" target="gYe92Rgtv7boX88liuPo-643" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1650" y="400" as="sourcePoint" />
            <mxPoint x="1140" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-643" value="RL Offline Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="760" y="210" width="245" height="1640" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-18" value="&lt;h4&gt;Offline RL with Reverse Model-based Imagination&lt;/h4&gt;&lt;h4&gt;(Baidu China : NIPS 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-19" value="&lt;h4&gt;MOReL: Model-Based Offline RL&lt;/h4&gt;&lt;h4&gt;(Rahul Kidambi, et al. : NIPS 2020 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="230" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-4" value="&lt;h4&gt;Fine-tuning Offline Model-Based Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Adam Villaflor, et al. : ICLR 2021 - Reject)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="420" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-5" value="&lt;h4&gt;COMBO: Conservative Offline Model-Based Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Chelsea Finn, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="610" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-6" value="&lt;h4&gt;Offline Model-based Adaptable Policy Learning&lt;/h4&gt;&lt;h4&gt;(Xiong-Hui Chen, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="810" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-7" value="&lt;h4&gt;Weighted Model Estimation for Offline Model-based Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;(Toru Hishinuma, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1010" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-8" value="&lt;h4&gt;Overcoming Model-Bias for Robust Offline Deep Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;(Phillip Swazinna, et al. : CoRR 2020)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1210" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-9" value="&lt;h4&gt;Behavioral Priors and Dynamics Models : Improving Performance and Domain Transfer in Offline RL&lt;/h4&gt;&lt;h4&gt;(Pieter Abbeel, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1410" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-644" value="RL Offline Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1040" y="210" width="230" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-10" value="&lt;h4&gt;&lt;span&gt;Uncertainty-Based Offline RL with Diversified Q-Ensemble&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Gaon An: NIPS 2021 )&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;whiteSpace=wrap;" parent="gYe92Rgtv7boX88liuPo-644" vertex="1">
          <mxGeometry x="12.5" y="51" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-645" value="RL Offline Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1285" y="210" width="220" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-646" value="RL Offline Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1510" y="210" width="230" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-11" value="&lt;h4&gt;&lt;span&gt;Comparing Model-Free and Model-Based Algorithms for Offline RL&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Phillip Swazinna: arxiv )&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=block;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;whiteSpace=wrap;fillOpacity=100;arcSize=12;" parent="gYe92Rgtv7boX88liuPo-646" vertex="1">
          <mxGeometry x="6" y="41" width="215" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-647" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-644" target="gYe92Rgtv7boX88liuPo-629" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1240" y="220" as="sourcePoint" />
            <mxPoint x="1290" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-648" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-645" target="gYe92Rgtv7boX88liuPo-649" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1530" y="340" as="sourcePoint" />
            <mxPoint x="1582.5" y="159.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-649" value="&lt;span&gt;&lt;b&gt;Hybrid&lt;/b&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1365" y="135" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-650" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-646" target="gYe92Rgtv7boX88liuPo-630" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1540" y="330" as="sourcePoint" />
            <mxPoint x="1590" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-651" value="RL Online Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;fontStyle=1" parent="1" vertex="1">
          <mxGeometry x="1770" y="210" width="767.5" height="19130" as="geometry" />
        </mxCell>
        <mxCell id="bVU3PEh5Btl0sVfo6UzQ-1" value="&lt;b&gt;&lt;span style=&quot;color: rgb(51 , 51 , 51) ; font-family: &amp;#34;noto sans&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgba(0 , 0 , 0 , 0.04)&quot;&gt;Self-Correcting Models for Model-Based Reinforcement Learning&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;br&gt;(&lt;span style=&quot;color: rgb(51 , 51 , 51) ; font-family: &amp;#34;noto sans&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgba(0 , 0 , 0 , 0.04)&quot;&gt;Erik Talvitie&lt;/span&gt;: AAAI 2017 )&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read:&lt;/b&gt;&amp;nbsp;Abstract, Introduction, Conclusion, Preliminary, Half of Body&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openreview.net/forum?id=BkZEuTeOZr&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;When an agent cannot represent a perfectly accurate model of its environment&#39;s dynamics, model-based reinforcement learning (MBRL) can fail catastrophically. Planning involves composing the predictions of the model; when flawed predictions are composed, even minor errors can compound and render the model useless for planning.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;Hallucinated Replay&quot; trains the model to &quot;correct&#39; itself when it produces errors, substantially improving MBRL with flawed models.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Main contribution of this paper is that it theoretically analyzes this approach of &quot;Hallucinated Replay&quot;, illuminates settings in which it is likely to be effective or ineffective, and presents a novel error bound, showing that a model&#39;s ability to self-correct is more tightly related to MBRL performance than one-step prediction error.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;General MBRL approach is to learn a Model &lt;i&gt;P&lt;/i&gt;, approximating transition-dynamics P, and then to use the model to produce a policy via a planning algorithm. Note that it is given that we already know R.&lt;/li&gt;&lt;li&gt;State-Action Distribution Formulation.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;This paper claims (shows) models with similar one-step prediction error can vary wildly in their usefulness for planning. The true distinguisher is the accuracy of predictions far into the future.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="10" y="60" width="690" height="580" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-1" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Algorithmic Framework for Model-based Deep&lt;br&gt;Reinforcement Learning with Theoretical Guarantees&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(ICLR 2019; Tengyu Ma, et al.)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=BJe1E2R5KX&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Abstract, Introduction, Notations and Preliminaries, Conclusion&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Unread&lt;/b&gt;:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Algorithmic Framework, Discrepancy Bounds Design, Additional Related Work, Practical Implementation and Experiments&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;MBRL which has advantage of sample-efficiency currently lacks theoretical understanding, for example as:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;How does the error of estimated model affect the estimation of the value function and the planning?&lt;/li&gt;&lt;li&gt;Can model-based RL algorithms be guaranteed to improve the policy monotonically and converge to a local maximum of the value function?&lt;/li&gt;&lt;li&gt;How do we quantify the uncertainty in the dynamical models?&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Previous theoretical work on MBRL were mostly focused on linear models (MDP, linear parameterizations) but not non-linear models.&lt;/li&gt;&lt;li&gt;Naturally, there was no previous algorithm with convergence guarantees for model-based &quot;deep&quot; RL.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Proposes a novel algorithmic framework for&amp;nbsp;&lt;b&gt;model-based &quot;deep&quot; RL&lt;/b&gt;&amp;nbsp;with theoretical guarantee of monotonically converging to a local maximum of the reward, preserving the sample-efficiency advantage of MBRL.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Experiments demonstrate that this proposed &quot;variant of model-based algorithms Stochastic Lower Bounds Optimization (SLBO)&quot; achieves state-of-the-art performance when &quot;only&quot; one million (1M) samples are permitted on a range of continuous control bench mark tasks.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In terms of trying to design a MBRL algorithm which can achieve near-optimal reward on complicated tasks or real-world tasks sample-efficiently (using fewer samples), the author says it would be important to think about the &quot;trade-off&#39; between &quot;optimism and robustness&quot;.&lt;/li&gt;&lt;li&gt;Confidence Interval of parameters are likely meaningless for over-parameterized neural networks.&lt;/li&gt;&lt;li&gt;A stochastic policy specifies the conditional distribution over the action-space given a state &#39;s&#39;.&lt;/li&gt;&lt;li&gt;A dynamical model specifies the conditional distribution of the next state given the current state and action.&lt;/li&gt;&lt;li&gt;When the dynamic model is deterministic, M(-|s,a) is a &#39;dirac&#39; measure.&lt;/li&gt;&lt;li&gt;Reward (R) can be assumed as &quot;known&quot;, although R can be also considered as part of the model if unknown.&lt;/li&gt;&lt;li&gt;Every policy &lt;font face=&quot;Symbol&quot;&gt;p&lt;/font&gt; induces a distribution of states visited by policy &lt;font face=&quot;Symbol&quot;&gt;p.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;For a policy&amp;nbsp;&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;p&lt;/span&gt;, define&amp;nbsp;&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;R&lt;/span&gt;^&lt;font face=&quot;Symbol&quot;&gt;{p&lt;/font&gt;,&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;M&lt;/span&gt;}&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;&amp;nbsp;&lt;/span&gt;as the &quot;discounted distribution of the states&quot; visited by&amp;nbsp;&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;p&lt;/span&gt;&amp;nbsp;on&amp;nbsp;&lt;span style=&quot;font-family: &amp;#34;symbol&amp;#34;&quot;&gt;M&lt;/span&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4;" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="10" y="660" width="700" height="1220" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-2" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Model Based Reinforcement Learning for Atari&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;ICLR 2020; Chelsea Finn, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=S1xCPJHtDB&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="25.700000000000003" y="18250" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-3" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Maximum Entropy Model-based Reinforcement Learning&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(NIPS 2021; Oleg Svidchenko, et. al)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=uBDG3yX-2sQ&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="18670" width="690" height="430" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-4" value="&lt;span style=&quot;line-height: 107%&quot;&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Improving Model-Based Deep Reinforcement Learning with &lt;font color=&quot;#ff0000&quot;&gt;&quot;Learning Degree Networks&quot;&lt;/font&gt; and Its Application in Robot Control&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(Journal of Robotics 2022;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: &amp;#34;ibm plex sans&amp;#34; , sans-serif ; font-size: 14px&quot;&gt;&lt;b&gt;Guoqing Ma&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et. al)&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;br&gt;Link:&lt;br&gt;&lt;/b&gt;https://www.hindawi.com/journals/jr/2022/7169594/&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Abstract, Introduction, Conclusion&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper proposes a Model-based method that uses a Learning-Degree Network (MBRL-LDN), and is based on A3C algorithm.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;font color=&quot;#ff6666&quot;&gt;By comparing the differences between the &quot;states outputted by the &#39;proposed&#39; multi-dynamic model&quot; and the &quot;original predicted states&quot;,&amp;nbsp;the &quot;&lt;b&gt;learning degree&lt;/b&gt;&quot; of the system dynamics model is &lt;b&gt;calculated&lt;/b&gt;.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;font color=&quot;#ff3333&quot;&gt;&quot;Learning degree&quot; represents the quality of the data generated by the dynamic model and is used to decide whether to continue to interact with the dynamic model during a particular episode. Thus, low-quality data will be discarded.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;Joonyoung: 내가 하려는 방법과는 다소 차이가 있는것으로 판단됨.&lt;/b&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This method, &lt;i&gt;which uses the learning degree to determine the probability of using the dynamic model to solve the typical MBRL problem of having low predictive accuracy and cumulative errors which affect final training results&lt;/i&gt;, combines the advantages of the &lt;b&gt;below two methods&lt;/b&gt;.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In [19], K Critic models were applied, and the probability of obtaining data from the dynamic model was determined by the variance of the Q-value.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;[19]:&lt;/b&gt;&lt;i&gt;&amp;nbsp;&lt;/i&gt;&lt;span style=&quot;font-style: italic&quot;&gt;G. Kalweit and J. Boedecker, “Uncertainty-driven imagination&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-style: italic&quot;&gt;for continuous deep reinforcement learning,” in Proceedings&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-style: italic&quot;&gt;of the Conference on Robot Learning, pp. 195–206, Mountain&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-style: italic&quot;&gt;View, CA, USA, 2017.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;위의 K-Critic Model [19] 읽어봐라. 내가 하려는 것과 접점이 있는듯하다. 지금 떠오르는 차이점은 나는 Critic을 virtual data 의 quality measurement 에 쓴다는데있다.&lt;/font&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Reference [20] uses a set of dynamic models to determine whether to continue iterating, according to the number of dynamics models that achieved better performance.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;[20]:&amp;nbsp;&lt;/b&gt;&lt;i&gt;&lt;span&gt;T. Kurutach, I. Clavera, Y. Duan, A. Tamar, and P. Abbeel,&amp;nbsp;&lt;/span&gt;&lt;span&gt;“Model-ensemble trust-region policy optimization,” in Proceedings of the International Conference on Learning Representations, Vancouver, Canada, 2018.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Paper defines &lt;b&gt;&quot;Learning Degree&quot;&lt;/b&gt; as the &lt;b&gt;&#39;accuracy of predicted dynamic model&#39;&lt;/b&gt;.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Paper employs a &#39;&lt;b&gt;set of learning-degree networks&#39;&lt;/b&gt;&lt;b&gt;&amp;nbsp;to evaluate the&lt;/b&gt; &lt;b&gt;accuracy&lt;/b&gt;.&lt;/li&gt;&lt;li&gt;Paper also defines &quot;learning degree&quot; as &quot;degree of certainty of the imagination&quot;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Analysis of source of model-error&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In beginning, underfitting of the dynamic model trained with limited environmental data will cause bias.&lt;/li&gt;&lt;li&gt;Model&#39;s predicted imaginary state (observation) has never been sampled from the agent&#39;s perspective. This means the dynamic model can overfit to the partial environmental data which can negatively influence the final result.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 21px&quot;&gt;&lt;span style=&quot;font-size: 13px ; white-space: pre&quot;&gt; [&lt;/span&gt;&lt;b&gt;&lt;font style=&quot;font-size: 21px&quot;&gt;2022-03-25]&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 21px&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 21px&quot;&gt;&lt;span style=&quot;white-space: pre&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt; &lt;/span&gt;논문 Page 3,4 정리해라!!!&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;DYNA&lt;/li&gt;&lt;li&gt;Embed to Control (E2C)&amp;nbsp;&lt;/li&gt;&lt;li&gt;World Models&lt;/li&gt;&lt;li&gt;In MBRL, it is very common that the cumulative error problem is especially aggravated when optimizing long sequence tasks.&lt;/li&gt;&lt;li&gt;BP Neural Network:&amp;nbsp; &amp;nbsp; ( MLP-multi_layer_perceptron 과 같은 것인듯? )&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Back propagation (BP) neural network algorithm is a multi-layer feedforward network trained according to error back-propagation algorithm and is one of the most widely applied neural network models.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="25" y="3580" width="680" height="1300" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-10" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="95" y="1150" width="573.91" height="330" as="geometry" />
        </mxCell>
        <mxCell id="hBC3RfpDge2pfRJwB3lK-1" value="&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Procedural Generalization by Planning with Self-Supervised World Models&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;ICLR 2022; Ankesh Anand, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=FmBegXJToY&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="47.5" y="15740" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="hBC3RfpDge2pfRJwB3lK-2" value="&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;When to Trust Your Model: Model-Based Policy Optimization&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2019; Sergey Levine, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=BJg8cHBxUS&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Abstract, Introduction, Related work, Background, Conclusion&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Shows that &quot;existing formulation and analysis of model-based reinforcement learning algorithm with a guarantee of monotonic improvement at each step&quot; cannot be used to justify the usage of model due to the pessimistic model-error bound, and introduces a more empirical and realistic model-error to provide a more reasonable tradeoff of model usage.&lt;/li&gt;&lt;li&gt;Proposes Model-Based-Policy-Optimization (&quot;MRPO&quot;) that makes limited use of predicted model in the sense that it disentangles the task horizon and model horizon by querying the model only for short rollouts which large amount of these allow policy optimization algorithm to learn faster, leading to enjoying advantages of both model-free and model-based approaches.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Gap between &quot;returns of the policy in the true MDP (&#39;true returns&#39;)&quot; and &quot;returns of the policy under our model (&#39;model returns&#39;)&quot; can be expressed in terms of 2 error-quantities of the &quot;model&quot;.&amp;nbsp; &amp;nbsp; (&lt;i&gt;refer to page 3 of this paper&lt;/i&gt;)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;[1] (model) generalization error due to sampling (sampling: time dependent data-collecting policy&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;[2] distribution shift due to the updated policy encountering states not seen during model-training&lt;/b&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;This paper provides a useful relationship between &quot;model returns&quot; and &quot;true returns&quot;, of bounding the true returns and model returns of the policy as (implying that if we can improve &#39;model returns&#39; more than C, it guarantees improved &#39;true return) :&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;true returns&quot; &amp;gt;= &quot;model returns&quot; - C( e_{m} , e_{pi} )&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;&amp;lt;&amp;lt;&amp;lt; (details in pg.3, pg.4 in paper)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;However, when the model-error is high it may be difficult to exploit such relationship due to:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;[1] There may not exist a policy such that &quot;model returns&quot; - &quot;true returns&quot; &amp;gt; C ( e_{m}, e_{pi} ), in which case&amp;nbsp; improvement is not guaranteed.&lt;/li&gt;&lt;li&gt;[2] The analysis relies on running full rollouts through the model, allowing model errors to compound.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;To above issue can be addressed by choosing to rely less on the model and instead more on real data collected from the true dynamics when the model is inaccurate.&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper proposes a &lt;i style=&quot;font-weight: bold&quot;&gt;&quot;k-branched branched rollout&quot; &lt;/i&gt;method, which begins the rollout from a state under the previous policy&#39;s state distribution and run &#39;k&#39; steps according to current policy under the learned model&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;&lt;font color=&quot;#cc0000&quot;&gt;Model Generalization (in practice)&lt;/font&gt;&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;To better determine how well we can expect our model to generalize in practice, we empirically measure how the model error under new policies increases with policy change&lt;/li&gt;&lt;ul&gt;&lt;li&gt;We train a model on the state-distribution of a data-collecting policy and then continue policy-optimization while measuring the model&#39;s loss on all intermediate policies during this optimization.&lt;/li&gt;&lt;li&gt;Figure 1a (page 5) shows that, as expected, the model error increases with the divergence between the current policy and the data-collecting policy.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;However,&amp;nbsp;&lt;/b&gt;the rate of increase depends on the amount of data collected by the data-collecting policy.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Figure 1b plots the local change in model error over policy.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;The decreasing dependence on policy shift shows that not only do models trained with more data perform better on their training distribution, but they also generalize better to nearby distributions.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Experiments&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Compared this paper&#39;s method (MBPO: Model-Based-Policy-Optimization) with&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;SAC (Soft Actor Critic - Model Free - OffPolicy )&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;PPO ( Proximal Policy Optimization - Model Free - OnPolicy )&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;PETS (Probabilistic Ensembles with Trajectory Sampling; Sergey Levine, et al. NIPS 2018)&amp;nbsp;&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Link:&amp;nbsp;&lt;a href=&quot;https://arxiv.org/abs/1805.12114&quot;&gt;https://arxiv.org/abs/1805.12114&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Deep Reinforcement Learning in a Handful of Trials using Probabilistic Dynamics Models&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;STEVE (Sample-Efficient Reinforcement Learning with Stochastic Ensemble Value Expansion; Honglak Lee, et al. NIPS 2019)&amp;nbsp;&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Link: &lt;a href=&quot;https://arxiv.org/abs/1807.01675&quot;&gt;https://arxiv.org/abs/1807.01675&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;By dynamically interpolating between model rollouts of various horizon lengths for each individual example, STEVE ensures that the model is only utilized when doing so does not introduce significant errors&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;SLBO&amp;nbsp;(Algorithmic Framework for Model-based Deep Reinforcement Learning with Theoretical Guarantees; Tengyu Ma, et al. ICLR 2019)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;The meta-algorithm iteratively builds a lower bound of the expected reward based on the estimated dynamical model and sample trajectories, and then maximizes the lower bound jointly over the policy and the model. The framework extends the optimism-in-face-of-uncertainty principle to non-linear dynamical models in a way that requires no explicit uncertainty quantification. Instantiating our framework with simplification gives a&amp;nbsp; variant of model-based RL algorithms Stochastic Lower Bounds Optimization (SLBO)&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Compared MBPO with above RL algorithms on Domains of:&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Mujoco&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Inverted Pendulum&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Hopper&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Walker2d&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Ant&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;HalfCheetah&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Humanoid&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Mujoco Link:&amp;nbsp;&lt;a href=&quot;https://github.com/openai/gym/tree/master/gym/envs/mujoco&quot;&gt;https://github.com/openai/gym/tree/master/gym/envs/mujoco&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;One Line Summary&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper&#39;s &quot;Related work&quot; section has excellent description about &quot;Model-based reinforcement learning&quot;.&lt;/li&gt;&lt;li&gt;While ground-truth models are most effective when queried for long horizons, inaccuracies in learned models tend to make long rollouts unreliable.&lt;/li&gt;&lt;li&gt;Estimated Model Generalization Capacity&lt;/li&gt;&lt;li&gt;&lt;b&gt;Dynamics is assumed to be unknown. Model-based RL methods aim to construct a model of the transition distribution using data collected from interaction with the MDP, &lt;font color=&quot;#ff0000&quot;&gt;typically using supervised learning.&lt;/font&gt;&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Sometimes it is additionally assumed that the reward function has unknown form, so reward function is also predicted as a learned function of &quot;s&quot; and &quot;a&quot;.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;MBPO optimizes a policy under a learned model, collects data under the updated policy, and uses that data to train a new model.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;While conceptually simple, the performance of MBPO can be difficult to understand; errors in the model can be exploited during policy optimization, resulting in large discrepancies between the predicted returns of the policy under the model and under the true dynamics.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="15" y="1910" width="705" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="hBC3RfpDge2pfRJwB3lK-4" value="&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Safe Model-Based Reinforcement Learning with Stability Guarantees&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;ICLR 2022;&amp;nbsp;&lt;/span&gt;Felix Berkenkamp&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://las.inf.ethz.ch/files/berkenkamp17safe_model.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="36.95" y="15320" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="uDt9kWdJMiYbxCSGdVR0-1" value="&lt;div style=&quot;font-size: 20px&quot;&gt;&lt;font face=&quot;calibri, sans-serif&quot; color=&quot;#cc0000&quot; style=&quot;font-size: 20px&quot;&gt;&lt;b&gt;Following WORK may not directly fall under MBRL, but does use of DynamicsModel and is in literature of data-efficient RL&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 20px&quot;&gt;&lt;font face=&quot;calibri, sans-serif&quot; style=&quot;font-size: 20px&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;PlayVirtual: Augmenting Cycle-Consistent Virtual Trajectories for Reinforcement Learning&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2021;&amp;nbsp;&lt;/span&gt;Zhibo Chen&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=InYbKA26YG2&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Abstract, Conclusion, Introduction, Figure-1&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Despite its success, Deep RL faces the challenge of data/sample inefficiency when learning from high-dimensional observations such as images pixels, from limited experience.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Fitting a high-capacity feature encoder using only scarce reward signals is data-inefficient and prone to suboptimal convergence.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Collecting experience in real-world is often expensive and time-consuming, &lt;b&gt;therefore making efficient use of limited experience (i.e., improving data-efficiency) becomes vital for RL.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Previous works try to &lt;b&gt;improve data-efficiency&lt;/b&gt; with &quot;auxiliary supervision&quot; (&#39;introducing auxiliary tasks with useful self-supervision to learn compact and informative feature-representations, which better serves policy learning&quot;).&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Good &quot;auxiliary supervision&quot; do improve the data efficiency of RL.&lt;/li&gt;&lt;li&gt;&lt;b&gt;However, those methods still do not enrich the experienced trajectories (state-action sequences) in training and thus the deep networks are still deficient in experiencing/ingesting flexible/diverse trajectories.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Contribution Summary&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper proposes a new method (&quot;PlayVirtual&quot;) which augments cycle-consistent virtual state-action trajectories to enhance the data-efficiency for RL feature representation learning.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;PlayVirtual predicts future states based on the current state and a sequence of sampled actions, and then predicts the previous states, which forms a trajectory cycle/loop.&lt;/li&gt;&lt;li&gt;This method enforces the trajectory to meet the cycle consistency constraint to regularize the feature representation learning.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;PlayVirtual predicts future states in the &#39;latent space&#39; by a dynamics model in the forward prediction (trained using real trajectories to predict the future state based on current state and action), and then predict the previous states by a backward-dynamics model, &lt;b&gt;forming a loop.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;In this way, we can augment the actions to generate a large amount of virtual state-action transitions for feature-representation training, with the self-supervised cycle consistency constraint (which is a necessary/desirable condition for a good feature encoder). &lt;b&gt;+&lt;/b&gt; &lt;i&gt;&quot;cycle consistency constraint&quot; is met by enforcing the backwardly predicted state of the current timestep to be similar to the original current timestep.&lt;/i&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Note such design is free of ground-truth supervision.&lt;/li&gt;&lt;li&gt;Such augmentation to generate abundant virtual trajectories can significantly enhance the data-efficiency.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Author-specified Contribution&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Pinpoint that augmenting the experience of RL in terms of trajectories is important for feature-representation-learning in RL (which is a sequential decision-making problem) to enhance data-efficiency.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper says &quot;To our best knowledge, we are the first to generate virtual trajectories (experience) for boosting feature learning.&quot;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Proposes PlayVirtual that augments virtual trajectories under self-supervised cycle consistency constraint, which significantly improvs data-efficiency.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;PlayVirtual tries to ensure the correctness of generated transitions/trajectories by taking a necessary condition of a good trajectory (i.e., satisfying the cycle consistency of the trajectory) as a constraint to optimize the network.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Our key idea is to augment the actions to generate virtual state-action trajectories for boosting the representation learning of the encoder.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Purpose of auxiliary module appears to be to better-train the encoder (state-compressor) than the RL policy itself.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;대충 이해함. virtual trajectory 별로 real-experience가 없는 area에 generate 해서 boosting the representation learning of the encoder하는것.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;noto sans&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgba(0 , 0 , 0 , 0.04)&quot;&gt;OpenReviewNet 의 Reviewer 에 따르면: This differs from model-based approaches in that the virtual trajectories are used to train a representation rather than as experience for training a policy&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Cycle-Consistency (&quot;순환일관성&quot;)은 원래 있는 개념이다.&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;EX:&lt;/b&gt;&amp;nbsp;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;CycleGAN에서는 G(X)=Y 에서 Y값을 다시 X로 복원하는 F(Y) = X 생성모델과 이 값을 판별한 판별기 하나를 더 추가해서 총 4 개의 딥러닝 네트워크를 사용한다.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;이때 X -&amp;gt; Y, Y-&amp;gt; X로 사상(&quot;mapping&quot;) 하는것을 순환일관성 (&quot;Cycle Consistency&quot;)라 부른다.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Source&lt;/b&gt;:&amp;nbsp;https://mikigom.github.io/jekyll/update/2017/07/11/cyclegan.html&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Examples of &quot;&lt;b&gt;Auxiliary Supervision&lt;/b&gt;&quot;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;[ Improves data-efficiency by introducing auxiliary tasks with useful self-supervision to learn features ]&lt;br&gt;&lt;/div&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Leveraging image reconstruction&lt;/li&gt;&lt;li&gt;Prediction of future states&lt;/li&gt;&lt;li&gt;Maximizing predictive information&lt;/li&gt;&lt;li&gt;Promoting discrimination through contrastive learning.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Feature&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;ML에서 Feature은 특징이다.&lt;/li&gt;&lt;li&gt;EX: MNIST 손으로 쓴 숫자 image data에서 feature can be 1 pixel.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Feature을 Training Dataset에서 하나의 column으로 생각해라!.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Feature Engineering (ML)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Feature engineering is a ML technique that leverages data to create new variables that aren’t in the training set.&lt;/li&gt;&lt;li&gt;It can produce new features for both supervised and unsupervised learning, with the goal of simplifying and speeding up data transformations while also enhancing model accuracy.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Latent Feature&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;숨겨진 특징&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Feature representation learning (ML)&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;In ML, feature-learning or representation learning is a set of techniques that allows a system to automatically discover the representations needed for feature detection or classification from raw data.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;This replaces manual feature engineering and allows a machine to both learn the features and &lt;b&gt;use them to perform a specific task.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;b&gt;Feature learning in context of:&lt;/b&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;Supervised Learning:&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;Features are learned using labeled input data.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Example: &lt;/b&gt;Supervised Neural Network, MLP, etc.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;b&gt;Unsupervised Learning:&lt;/b&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Features are learned using unlabeled input data.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Example: &lt;/b&gt;Independent Component Analysis (ICA), AutoEncoders, Matrix Factorialization, and various forms of clustering.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;b&gt;Reinforcement Learning (RL):&lt;/b&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;b&gt;Features are learned using &#39;interactively collected&#39; labeled input data.&lt;/b&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&#39;labeled input data&#39; here is basically experiences (transitions), the &#39;label&#39; being &#39;next_state&#39; or &#39;reward&#39; or both, and input being state-action pair.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;For image-to-image translation, CycleGAN [60] introduces the &lt;b&gt;&quot;&lt;font color=&quot;#ff0000&quot;&gt;cycle consistency constraint&lt;/font&gt;&quot; &lt;/b&gt;to Generative Adversarial Networks (GAN) &lt;b&gt;to remove the requirement of ground-truth paired images for training, by &quot;&lt;font color=&quot;#ff0000&quot;&gt;enforcing back-translated image to be the same as the original one.&lt;/font&gt;&quot;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="4910" width="690" height="2160" as="geometry" />
        </mxCell>
        <mxCell id="3zg239TcTPhADBUxebMR-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 20px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;DECAF: Generating Fair Synthetic Data Using Causally-Aware Generative Networks&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; background-color: transparent ; font-weight: 700 ; vertical-align: baseline&quot;&gt;(NIPS 2021, Mihaela van der Schaar, et.al)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://arxiv.org/pdf/2110.12884v2.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Abstract, Conclusion&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results (short)&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Main-Takeaway&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;DECAF tries to de-bias biased training-data with causally-aware GAN resulting in fair synthetic data, and is compatible to a number of fairness criteria&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Downstream Learner&lt;/li&gt;&lt;li&gt;DAG network (Directed Acyclic Graph)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="22.5" y="7400" width="690" height="650" as="geometry" />
        </mxCell>
        <mxCell id="kDWEZTRpDnQ2OTPNjHmy-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;font style=&quot;font-size: 14px&quot;&gt;Learning latent state representation for speeding up exploration&lt;/font&gt;&lt;/b&gt;&lt;div style=&quot;font-size: 20px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;(arxiv preprint 2019, Pieter Abbeel, et.al)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://arxiv.org/abs/1905.12621&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Abstract, Conclusion, Figure-1, Figure-2, Algorithm-1&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Try to Read&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Pseudocode, Key Equations&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Exploration is an extremely challenging problem in reinforcement learning, especially in high dimensional state and action spaces and when only sparse rewards are available.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;font color=&quot;#cc0000&quot;&gt;Effective representations can indicate which components of the state are task-relevant&amp;nbsp;and&amp;nbsp;thus reduce the dimensionality of the space to explore.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Contributions&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;This work takes a &#39;representation learning viewpoint&#39; on &#39;exploration&#39;, by utilizing prior experience to learn effective latent state-representations, which can subsequently indicate which regions to explore. (&lt;/span&gt;&lt;b&gt;&quot;representation for meta-exploration&quot;&lt;/b&gt;&lt;span&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;Prior experience on separate but related tasks, help learn &quot;representations of the state&quot; which are effective at predicting instantaneous rewards.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;These learned state-representations can then be used with an &quot;entropy-based exploration method&quot; to effectively perform exploration in high dimensional spaces by effectively lowering the dimensionality of the search space.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;This work proposes a novel exploration algorithm that enables the effective training of the desired task by using information learned from the solution of similar prior tasks. (&lt;b&gt;&quot;meta-exploration&quot;)&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;This work proposes a &quot;multi-headed network&quot; which in its shared layers encodes the portion of state-space effective at predicting the reward in given task family.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This information (portion of state-space effective at predicting rewards in given task family) is then encoded into an exploration algorithm based on entropy maximization.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Figure-1&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Multi-headed network for reward regression on N tasks (from same task-distribution)&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Figure-2&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;Maximum Entropy Bonus Exploration&quot; on a learned latent state-representation &quot;z&quot;.&lt;/li&gt;&lt;li&gt;Note that the shared-layers in multi-headed network which outputs latent state-representation &quot;z&quot; was trained offline, using the data collected during the solution of prior tasks.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;During the maximum-entropy bonus exploration algorithm, its parameters are kept fixed.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;multi-headed network&lt;/li&gt;&lt;li&gt;entropy bonus&lt;/li&gt;&lt;ul&gt;&lt;li&gt;It is typical to add what is sometimes called an &quot;entropy bonus&quot; to the loss function. This bonus encourages the agent to take actions more unpredictably, rather than less so.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Entropy bonuses are used because without them an agent can too quickly converge on a policy that is locally optimal, but not necessarily globally optimal.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="25" y="8070" width="690" height="1020" as="geometry" />
        </mxCell>
        <mxCell id="kDWEZTRpDnQ2OTPNjHmy-2" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 11pt ; background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;Model-Based Reinforcement Learning via Latent-Space Collocation&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 11pt ; background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;(PMLR 2021, Sergey Levine, et.al)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://proceedings.mlr.press/v139/rybkin21b.html&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read: &lt;/b&gt;Abstract, Conclusion, Figure-1, Figure-2&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Previous Visual MBRL have shown impressive results on tasks that require only short-horizon reasoning but suffered for temporally extended tasks.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This work argues that it&#39;s easier to solve long-horizon tasks by planning sequences of states rather than just actions as effects of actions greatly compound over time and are hard to optimize.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This work utilizes the idea of collocation (which has shown good results on long-horizon tasks in optimal control), adapting it to the image-based setting by utilizing learned latent state space models.&lt;/li&gt;&lt;li&gt;Resulting method &quot;Latent Collocation&quot; optimizes trajectories of latent states.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Proposed method &quot;Latent Collocation (LatCo)&quot; improves performance of visual-model based learning agents, and uses powerful trajectory optimization to plan for long-horizon tasks where prior work fails.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;LatCo optimizes a sequence of latent states and actions to maximize rewards as well as satisfies dynamics. This joint optimization allows the dynamics constraint to be relaxed at first, which helps escape local minima.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In contrast, shooting methods requires recursive application of the dynamics and backpropagation through time, which is often difficult to optimize.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="9150" width="690" height="660" as="geometry" />
        </mxCell>
        <mxCell id="1cOKgds7kPJDUMPkLxUk-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent ; font-weight: 700 ; font-size: 14px&quot;&gt;LASER: Learning a Latent Action Space for Efficient Reinforcement Learning&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 11pt ; background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;(Animesh Garg, et al. ICRA 2021)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;http://www.roboticsproceedings.org/rss01/p11.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read: &lt;/b&gt;Abstract, Conclusion, Figure-1, Figure-2 (*), Figure-5, Figure-6, Figure-7, Figure-8, summary of contributions&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Process of learning a manipulation task depends strongly on the action space used for exploration: posed in the incorrect action-space, solving a task with RL can be drastically inefficient.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This work presents LASER, an algorithmic approach to learning efficient latent action-spaces from off-policy or online actions of an expert to accelerate posterior training of unseen tasks.&lt;/li&gt;&lt;li&gt;This work compares learning efficiency with RL in original action-space and latent action-space learned by LASER, and observes that the learned action-space by LASER provides marked improvements in subsequent learning iterations, indicating that information is transferrable across tasks.&lt;/li&gt;&lt;li&gt;This works shows that the learned latent action-spaces correlate clearly to the dimensions of the task space.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;&lt;font color=&quot;#990000&quot;&gt;Refer to Fig 2. LASER OVERVIEW&lt;/font&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="9850" width="707.5" height="480" as="geometry" />
        </mxCell>
        <mxCell id="htzchhoVIKSeEHClwtrw-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;/div&gt;&lt;span style=&quot;font-size: 14px&quot;&gt;&lt;b&gt;Efficient Exploration with Latent Structure&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;div style=&quot;font-size: 20px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;(Robotics, Thomas Walsh, et.al Robotics 2005)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;http://www.roboticsproceedings.org/rss01/p11.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="11.25" y="17700" width="707.5" height="480" as="geometry" />
        </mxCell>
        <mxCell id="htzchhoVIKSeEHClwtrw-2" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;b style=&quot;font-size: 14.6667px ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Unsupervised Learning of Temporal Abstractions with Slot-based Transformers&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 11pt ; background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;(Anonymous; Under Review as submission to TMLR 2022)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=VHIur3v08z&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry y="16170" width="707.5" height="480" as="geometry" />
        </mxCell>
        <mxCell id="htzchhoVIKSeEHClwtrw-22" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;Dynamic Abstraction in Reinforcement Learning via Clustering&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;(Uri Klein et al. ICML 2004)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://dl.acm.org/doi/abs/10.1145/1015330.1015355&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="2.5" y="16680" width="707.5" height="480" as="geometry" />
        </mxCell>
        <mxCell id="htzchhoVIKSeEHClwtrw-23" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;b style=&quot;font-size: 14.6667px ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Learning Dynamic State Abstractions for Model-Based Reinforcement Learning&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;(Daan Wierstra et al. Rejected ICLR 2018)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=HJw8fAgA-&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution (short)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry y="17180" width="707.5" height="480" as="geometry" />
        </mxCell>
        <mxCell id="6wIWVGCRtfuJ13tjATCJ-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Context-aware Dynamics Model for Generalization in Model-Based Reinforcement Learning&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;(Honglak Lee. et al. ICML 2020)&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;http://proceedings.mlr.press/v119/lee20g.html&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read: &lt;/b&gt;Abstract, Conclusion, Figure-1, Figure-2, Introduction, Related Work, Problem Statement&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Learning a global model that can generalize across different dynamics is a challenging task.&lt;/li&gt;&lt;li&gt;&lt;b&gt;For instance, a robot agent&#39;s transition-dynamics may change when some of its parts malfunction due to unexpected damages.&amp;nbsp;&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Our goal is to learn a generalizable forward-dynamics model that is robust to such dynamics changes,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; i.e., approximating a distribution of transition dynamics.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Specifically, given a set of training environments with contexts sampled from p_train(c), we aim to learn a forward-dynamics model that can produce accurate predictions for test environments with unseen contexts sampled from p_test(c).&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Joonyoung:&amp;nbsp;&lt;/b&gt;This work is about learning how to generalize to multiple tasks by learning a latent-context-vector that&#39;s conditioned on dynamics model.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Task of learning a global dynamics model decomposed into 2 stages:&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;[1] Learning a context latent vector that captures the local dynamics.&lt;/li&gt;&lt;li&gt;[2] Predicting the next state conditioned on that context latent vector.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;To extract contextual information effectively, we propose a novel loss function that encourages the context-latent-vector to be useful for various auxiliary prediction tasks.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Also shows that learned latent-context-vector can be utilized to &lt;b&gt;improve &lt;/b&gt;&lt;b&gt;generalization performance of model-free methods.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;However, it has been evidenced that model-based RL methods often struggle to generalize to an unseen environment with different transition dynamics.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="10350" width="707.5" height="750" as="geometry" />
        </mxCell>
        <mxCell id="RnF9pKgG6sMWz-AYlv8A-1" value="&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;font color=&quot;#cc0000&quot; style=&quot;font-size: 24px&quot;&gt;MUST READ&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px&quot;&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-weight: 700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Topology Applied to Machine Learning: From Global to Local&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent ; font-family: &amp;#34;calibri&amp;#34; , sans-serif ; font-size: 11pt ; font-weight: 700&quot;&gt;(Michael Moy;&amp;nbsp; FRAI 2021)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://www.frontiersin.org/articles/10.3389/frai.2021.668302/full&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Abstract, Conclusion&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;&lt;strike&gt;Motivation&lt;/strike&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;strike&gt;Contribution&lt;/strike&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;strike&gt;Technical Details of Contribution&lt;/strike&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;strike&gt;Results&lt;/strike&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Takeaways&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Because &lt;b&gt;persistent homology&lt;/b&gt; gives a concise description of the shape of data, it is not surprising that recent work has incorporated persistent homology into ML.&lt;/li&gt;&lt;li&gt;When might one consider using persistent homology in concert with ML, as opposed to other more classical ML techniques measuring shape such as Clustering or non-linear dimensionality reduction?&lt;/li&gt;&lt;ul&gt;&lt;li&gt;We recommend persistent homology when one desires either&lt;/li&gt;&lt;ul&gt;&lt;li&gt;a quantitative reductive summary of local geometry&lt;/li&gt;&lt;li&gt;an estimate of the number or size of more global topological features in a dataset.&lt;/li&gt;&lt;li&gt;way to explore if either local geometry or global topology may be discriminatory for the ML task at hand.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;homology (mathematics)&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In mathematics, homology is a certain general procedure to associate a sequence of abelian groups or modules with a given mathematical object such as a topological space or group.&lt;/li&gt;&lt;li&gt;Point-cloud data&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="21.25" y="11120" width="707.5" height="570" as="geometry" />
        </mxCell>
        <mxCell id="f2h8Nzm7bRCK7Pd9omrt-1" value="&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;Trust the Model When It Is Confident : Masked Model-based Actor Critic&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;calibri, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2020; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Qing He&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://proceedings.neurips.cc/paper/2020/file/77133be2e96a577bd4794928976d2ae2-Paper.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Citations, Abstract, Conclusion, Figure-1, Introduction, Background&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In complex and noisy settings, model-based RL tends to have trouble using the model if it does not know &quot;when to trust the model.&lt;/li&gt;&lt;li&gt;Better usage of the model is required. This work proves that if the use of model-generated data is restricted to state-action pairs where the model-error is small, the performance gap between model and real rollouts can be reduced.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This work puts forward masked model-rollouts and derive a general value bounds for Masked Model-based Policy-Iteration. This work proves that the gap between the model-based and the true Q-values is bounded and can be reduced via better model usage.&lt;/li&gt;&lt;li&gt;This work proposes a simple but powerful algorithm named &quot;Masked Model-based Actor-Critic (M2AC)&quot; which reduces the influences of model-error with a masking mechanism that &quot;trusts the model when it is confident&quot; and eliminates unreliable model-generated samples.&lt;/li&gt;&lt;li&gt;M2AC has high sample efficiency that reaches comparable returns to SOTA model-free methods with much fewer interactions, and is robust even when using long model-rollouts in very noisy environments.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Only use model-rollouts only when the model is confident about its predictions.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="22.5" y="11720" width="690" height="520" as="geometry" />
        </mxCell>
        <mxCell id="nbyOtgZnIHQO4NWdz5jt-1" value="&lt;div&gt;&lt;b&gt;&lt;span id=&quot;docs-internal-guid-86c5cf31-7fff-8d63-4bab-54e2a727663c&quot;&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;Sample-efficient reinforcement learning with stochastic ensemble value expansion&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2018; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Honglak Lee&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;&lt;a href=&quot;https://proceedings.neurips.cc/paper/2018/hash/f02208a057804ee16ac72ff4d3cec53b-Abstract.html&quot;&gt;https://proceedings.neurips.cc/paper/2018/hash/f02208a057804ee16ac72ff4d3cec53b-Abstract.html&lt;br&gt;&lt;/a&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;: Abstract, Conclusion, Citations, Figure-1, Figure-2, Related Works, Introduction, Background (MVE)&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;overestimation bias&lt;/li&gt;&lt;li&gt;TD-k-trick&lt;/li&gt;&lt;li&gt;distribution mismatch problem&lt;/li&gt;&lt;ul&gt;&lt;li&gt;bias in the Q-function on states sampled from the replay buffer is lower than when the Q-function is evaluated on states generated from model-rollouts.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="12280" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="nbyOtgZnIHQO4NWdz5jt-3" value="&lt;div&gt;&lt;b&gt;&lt;span id=&quot;docs-internal-guid-dfe796af-7fff-ad59-2d6b-3838420e28b0&quot;&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;Uncertainty-driven imagination for continuous deep reinforcement learning.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;ICLR 2017; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Joschka Boedecker&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link: &lt;br&gt;&lt;a href=&quot;https://proceedings.mlr.press/v78/kalweit17a.html&quot;&gt;https://proceedings.mlr.press/v78/kalweit17a.html&lt;/a&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read&lt;/b&gt;: Abstract, Conclusion, Figure-1, Introduction,&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Models that can easily (i.e. models of low capacity of complexity) be learned, however, might lack in expressiveness and thus in accuracy.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Therefore, an agent has to balance the use of artificial and real data during learning.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;To counteract adverse effects of imaginary rollouts with an inaccurate model, a notion of uncertainty is introduced, to make use of artificial data only in cases of &lt;b&gt;high uncertainty.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;To counteract adverse effects of inaccurate artificial data, the &lt;b&gt;uncertainty of the agent is measured&lt;/b&gt; and incorporated to limit training on the generated data set.&lt;/li&gt;&lt;li&gt;&lt;b&gt;3 main contributions&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;1. Shows that massive increase of updates per step does lead to stability issues in DDPG.&lt;/li&gt;&lt;li&gt;2. Extends replay memory of DDPG with artificial transitions from a neural model, and show that this leads to much smaller demand for real-world transitions.&lt;/li&gt;&lt;li&gt;3. Extends the &#39;Critic&#39; to a bootstrapped neural network, so as to limit artificial data usage for high uncertainty.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Determines the ratio of artificial and real data based on uncertainty of the Q-function.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In a RL setting, improving data-efficiency can be done by artificial transitions, e.g. through a learned dynamics model, under the assumption that the model can be learned faster than the corresponding value-function of a task.&lt;/li&gt;&lt;li&gt;While locally linear models are very efficient to learn, these models lack in expressiveness and do not generalize as well as neural models.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Thoughts&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;So this is not the uncertainty about the model but instead the uncertainty of the Q-function? wow.&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="30" y="12700" width="690" height="630" as="geometry" />
        </mxCell>
        <mxCell id="nbyOtgZnIHQO4NWdz5jt-4" value="&lt;div&gt;&lt;b&gt;&lt;span id=&quot;docs-internal-guid-7babca45-7fff-9188-445e-8c913fae3585&quot;&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;Policy Optimization with Model-based explorations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;AAAI 2019; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Pingzhhong Tang&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="28.750000000000046" y="13900" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="nbyOtgZnIHQO4NWdz5jt-5" value="&lt;div&gt;&lt;span id=&quot;docs-internal-guid-6af47800-7fff-3488-fe04-c2373dd19502&quot;&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;&lt;b&gt;Model-Based Reinforcement Learning via Imagination with Derived Memory&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2021; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Jianye Hao&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="28.75" y="14340" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="nbyOtgZnIHQO4NWdz5jt-2" value="&lt;div&gt;&lt;b&gt;&lt;span id=&quot;docs-internal-guid-4f916008-7fff-3784-5e7f-258a6e348285&quot;&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;Deep reinforcement learning in a handful of trials using probabilistic dynamics models&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size: 11pt ; font-family: &amp;#34;arial&amp;#34; ; background-color: transparent ; vertical-align: baseline&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;NIPS 2018; &lt;/span&gt;&lt;span style=&quot;line-height: 107%&quot;&gt;Sergey Levine&lt;/span&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details of Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="25.000000000000046" y="13470" width="690" height="400" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-652" value="RL Online Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="2560" y="210" width="120" height="280" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-653" value="RL Online Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;labelPadding=0;autosize=1;" parent="1" vertex="1">
          <mxGeometry x="2700" y="210" width="670" height="5730" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-12" value="&lt;b&gt;Combining Model-Based and Model-Free Updates for Trajectory-Centric Reinforcement Learning&lt;br&gt;&lt;/b&gt;&lt;br&gt;(Sergey Levine: PMLR 2017 )&lt;br&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;http://proceedings.mlr.press/v70/chebotar17a/chebotar17a.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Instead of using DNN as policy approximator, this paper uses TVLG (&quot;Time-Varying-Linear- Gaussian&quot;)&amp;nbsp;Controllers as policy representation, which can process fast optimization with model-based LQR-FLM (&quot;Linear-Quadratic-Regulators-Fitted-Local-Models&quot;) and model-free PI^2 (&quot;Policy-Improvement-with-Path-Integrals&quot;) algorithms, using sample-based updates.&lt;/li&gt;&lt;li&gt;This is a hybrid algorithm based on the two components (LQR-FLM and PI^2) where the PI^2 update is performed on the residuals between the true sample-based cost and the cost estimated under the local linear models.&lt;/li&gt;&lt;li&gt;Procedure for optimizing time-varying linear gaussian (TVLG) policies that integrates both fast model-based updates via iterative linear-Gaussian model fitting and corrective model-free updates via the PI^2 framework.&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10.5" y="60" width="650" height="460" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-15" value="&lt;h4&gt;Temporal Difference Models: Model-Free Deep RL for Model-Based Control&lt;/h4&gt;(Sergey Levine: ICLR 2018)&lt;br&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/pdf/1802.09081.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;&lt;br&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;TDM (&quot;Temporal Difference Models&quot;) learns &quot;variable-horizon-goal-conditioned-value-functions&quot; which with shorter horizons it corresponds to a &quot;model&quot; and with longer horizons it corresponds to &quot;model-free&quot; approach.&amp;nbsp;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;Goal-conditioned-value-functions&quot; learn to predict the value function for every possible goal state. That is, they answer the following question: what is the expected reward for reaching a particular state, given that the agent is attempting (to optimally as possible) to reach it? The particular choice of reward function determines what such a method actually does, but rewards based on distances to a goal hint at a connection to model-based learning: if we can predict how easy it is to reach any state from any current state, we must have some kind of understanding of the underlying &quot;physics.&quot;&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;This connection between model-based and model-free RL can be used to smoothly transition from learning models to learning policies, obtaining rich supervision from every sample to quickly gain a moderate level of proficiency, while still converging to an unbiased solution.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;u&gt;Important point is while other hybrid methods focus on combining different model-based and model-free RL techniques, this method proposes an &quot;equivalence&quot; between those two branches of RL through a special generalization of goal-conditioned value function.&lt;/u&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="14" y="820" width="650" height="560" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-16" value="&lt;h4&gt;Model-Based Priors for Model-Free Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: CoRL 2017 : Retracted paper due to identification of similar work in the past after submission)&lt;/span&gt;&lt;/h4&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/abs/1709.03153&lt;br&gt;&lt;b&gt;&lt;br&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Bridges the gap between Model-Free and Model-based RL by first learning a probabilistic dynamics model then leveraging it as a prior for the interleaved model-free optimization.&amp;nbsp;&lt;/li&gt;&lt;li&gt;This approach learns a dynamics model from scratch which is used to compute the trajectory distribution corresponding to a given policy, which in turn can be used to estimate the cost of the policy. This estimate is used by a Bayesian Optimization-based Model-Free policy search to guide the policy optimization.&amp;nbsp;&lt;/li&gt;&lt;li&gt;This approach uses the Model-Based return estimates as a bias for Model-Free policy learning, but the Model-Based component is incorporated as a prior mean into a Bayesian model-free update, which allows this approach to reason about the confidence of the Model-Free estimates across the entire policy space.&lt;/li&gt;&lt;li&gt;This approach learns the dynamics model of the system, and uses Bayesian Optimization (which uses Gaussian Process as underlying objective function) to find optimal policy parameters.&lt;/li&gt;&lt;li&gt;Gaussian Process provides both the expected value of the function at any arbitrary point as well as a notion of uncertainty of this estimate.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper uses Gaussian Process within Bayesian Optimization to map policy parameters to predicted cost. Also Gaussian Process is used to learn the unknown dynamics model.&lt;/li&gt;&lt;li&gt;Central to the choice of Gaussian Process is its capability of explicitly modeling the uncertainty in the underlying function. This uncertainty allows to account for the model-bias in the dynamics model, and to deal with the exploration/exploitation trade-off in a principled manner in Bayesian Optimization.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="9" y="1890" width="651" height="590" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-17" value="&lt;h4&gt;Model-Based Value Expansion for Model-Free Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: arxiv 2018)&lt;/span&gt;&lt;/h4&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/abs/1803.00101v1&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This paper proposes a &quot;model-based value expansion&quot; which controls for uncertainty in the model by only allowing imagination (virtual data generation) to a fixed depth.&lt;/li&gt;&lt;li&gt;This paper proposes a method that tries to reduce sample complexity while supporting complex non-linear dynamics by combining Model-Based and Model-Free learning techniques through disciplined model-use for value estimation.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Model is incorporated into the &quot;Q-value target estimation&quot;, making the model only required to make forward predictions.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;MVE (Model-Based Value Expansion) improves value estimates for a policy by assuming we have an approximate dynamical model ( f^{hat} ) and the true reward function ( R ).&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Such an improved value estimate can be used in training a critic for faster task-mastery in reward-dense environments.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="14" y="1440" width="651" height="420" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-23" value="&lt;h4&gt;&lt;span&gt;Predictive representations can link model-based reinforcement learning to model-free algorithms&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Evan M. Russek, et al.: pcbi 2017)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005768&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;br&gt;&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="26.5" y="4570" width="636" height="220" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-24" value="&lt;h4&gt;Look Before You Leap: Bridging Model-Free and Model-Based Reinforcement Learning for Planned-Ahead Vision-and-Language Navigation&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Xin Wang, et al.: ECCV 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openaccess.thecvf.com/content_ECCV_2018/html/Xin_Wang_Look_Before_You_ECCV_2018_paper.html&lt;br&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;&lt;br&gt;Summary:&lt;br&gt;&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="20" y="4230" width="650" height="290" as="geometry" />
        </mxCell>
        <mxCell id="MQd3Vb3raP3wGZ8idbkK-1" value="&lt;h4&gt;Model-based learning retrospectively updates model-free values&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Max Doody, et al.: nature 2022)&lt;/span&gt;&lt;/h4&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;&lt;a href=&quot;https://www.nature.com/articles/s41598-022-05567-3.pdf&quot;&gt;Model-based learning retrospectively updates model-free values (nature.com)&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Hybrid of Model-based and Model-Free based on insight from neuro-science.&lt;/li&gt;&lt;li&gt;&quot;Two-stage decision task&quot; is utilized. In this task, participants make t&lt;u&gt;wo sequential decisions&lt;/u&gt; to obtain a reward.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Two concepts are traditionally used to think about &quot;model-based behavior&quot; in &quot;two stage decision task&quot;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;[Concept-1]&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&quot;model-based learning&quot;, which refers to 2 processes.&lt;/li&gt;&lt;li&gt;(process-1)&lt;/li&gt;&lt;li&gt;the learning of transitions and the structure of the task through state prediction errors (&#39;state-learning&#39;),&amp;nbsp;&lt;/li&gt;&lt;li&gt;(process-2)&lt;/li&gt;&lt;li&gt;subsequently, learning the value of the states at stage 2 (&#39;state value learning&#39;)&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;li&gt;These processes consequently result in the production and refinement of an internal model of the task structure.&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;[Concept-2]&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&quot;model-based decision making&quot;, refers to how participants make choices utilizing the model.&lt;/li&gt;&lt;li&gt;Traditional approach is: &quot;Forward Planning&quot; which model-based individuals use their internal model to &#39;prospectively&#39; assess which path is more likely, to lead to the stage-2 state with highest state-value.&lt;/li&gt;&lt;li&gt;However, this paper proposes the following:&lt;/li&gt;&lt;li&gt;&lt;b&gt;&amp;lt;Following is Key Ideas of paper&amp;gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;At the &#39;time of reward&#39;, subjects could &#39;retrospectively update&#39; the action value of the stage-1 choice depending on whether they received a common or rare transition trial. On the next trial, at the &#39;time of decision&#39;, the most valuable action would then be selected.&lt;/li&gt;&lt;li&gt;In this approach, reward is propagated back through the causal chain to the action that is most likely to lead to a reward, taking into account the transition probabilities.&lt;/li&gt;&lt;li&gt;At the core of such a process would be a type of model-based RPE (&#39;reward prediction error&#39;) that is used to update the value not of the chosen action, but rather of the action that most likely would have led to the current state.&lt;/li&gt;&lt;li&gt;&lt;b&gt;(Why this is MBMF): In the simplest case, this would generate a prediction error at the time of outcome relative to the model-free value of the action that &#39;commonly&#39; leads to the actual stage-2 state&lt;/b&gt;. &lt;b&gt;In other words, &quot;Backward-Planning&quot; could be used to update the stage-1 model-free values when reward is received&quot;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&quot;model-based update&quot;: &lt;/b&gt;reflecting whether the state encountered was likely or unlikely to follow the option (action) that was selected.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="16.5" y="2930" width="646" height="1250" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-25" value="&lt;h4&gt;Neural Network Dynamics for Model-Based Deep Reinforcement Learning with Model-Free Fine-Tuning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: ICRA 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;b&gt;Reading Progress:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Read&lt;/li&gt;&lt;li&gt;Unread&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://ieeexplore.ieee.org/abstract/document/8463189&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This approach uses the model-based algorithm to initialize a model-free learner. The learned model-based controller (which uses MPC for its own training) provides good rollouts, which enable supervised initialization of a policy (&quot;imitation policy&quot;) that can then be fine-tuned with model-free algorithms (such as policy-gradients).&lt;/li&gt;&lt;li&gt;This paper demonstrates effective model-based reinforcement learning with neural-network models. Note that it was difficult to combine model-based algorithms with high-capacity and expressive deep neural networks.&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10" y="2500" width="650" height="380" as="geometry" />
        </mxCell>
        <mxCell id="bVU3PEh5Btl0sVfo6UzQ-5" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="75.5" y="3650" width="520" height="328" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-654" value="RL Online Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="3410" y="196" width="280" height="550" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-26" value="&lt;h4&gt;&lt;span&gt;Model-based versus Model-free Deep Reinforcement Learning for Autonomous Racing Cars&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Axel Brunnbauer, et al.: CoRR 2021)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openreview.net/forum?id=-JD17JdqLS-&lt;br&gt;&lt;b&gt;&lt;br&gt;Summary:&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-654" vertex="1">
          <mxGeometry x="5" y="30" width="270" height="220" as="geometry" />
        </mxCell>
        <mxCell id="MQd3Vb3raP3wGZ8idbkK-3" value="&lt;h4&gt;Overcoming the limits of Deep Reinforcement Learning with Model-Based approach&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Luca Sorrentino, et al.: ICRA 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://drlux.github.io/planpix.html&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-654" vertex="1">
          <mxGeometry x="5" y="260" width="270" height="220" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-655" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-633" target="gYe92Rgtv7boX88liuPo-651" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-656" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-652" target="gYe92Rgtv7boX88liuPo-634" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-657" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-653" target="gYe92Rgtv7boX88liuPo-635" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-658" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-654" target="gYe92Rgtv7boX88liuPo-636" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-12" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=16;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;" parent="1" source="gYe92Rgtv7boX88liuPo-443" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OPR0mSC2sfr2Xsl4kNfa-1" value="Text" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;hachureGap=4;" parent="1" vertex="1">
          <mxGeometry x="2790" y="9630" width="40" height="20" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
