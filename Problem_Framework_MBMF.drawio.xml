<mxfile host="app.diagrams.net" modified="2022-03-08T21:44:11.559Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36" etag="dn6Pm41lSmrMNWQHlAXu" version="17.0.0" type="github" pages="3">
  <diagram id="rs5LrS3yjigf87WkTgGt" name="Page-1">
    <mxGraphModel dx="2317" dy="620" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1600" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="gYe92Rgtv7boX88liuPo-2" value="&lt;b&gt;&lt;font style=&quot;font-size: 17px&quot;&gt;Meta-RL&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-312.5" y="10" width="102.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-4" value="&lt;b&gt;Online&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="130" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-8" value="" style="endArrow=none;html=1;rounded=0;entryX=0.432;entryY=-0.027;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-2" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-130" y="250" as="sourcePoint" />
            <mxPoint x="110" y="400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-9" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-2" target="gYe92Rgtv7boX88liuPo-434" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="60" y="450" as="sourcePoint" />
            <mxPoint x="-180" y="250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-12" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-1140" y="135" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-434" value="&lt;b&gt;Offline&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-810" y="50" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-440" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-12" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="420" as="sourcePoint" />
            <mxPoint x="30" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-441" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-915" y="135" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-443" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-457.5" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-445" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-441" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="320" as="sourcePoint" />
            <mxPoint x="30" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-448" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;startArrow=none;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="320" as="sourcePoint" />
            <mxPoint x="30" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-452" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="-222.5" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-453" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="20" y="135" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-454" value="&lt;b&gt;Hybrid&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="265" y="135" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-455" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="495.5" y="140" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-457" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-452" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="30" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-458" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-453" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-459" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-454" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-460" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-455" target="gYe92Rgtv7boX88liuPo-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-20" y="220" as="sourcePoint" />
            <mxPoint x="40" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-467" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-434" target="gYe92Rgtv7boX88liuPo-605" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-270" y="130" as="sourcePoint" />
            <mxPoint x="-457.5" y="129.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-585" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-12" target="gYe92Rgtv7boX88liuPo-595" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-390" y="400" as="sourcePoint" />
            <mxPoint x="-900" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-595" value="Meta-RL Offline Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-1191" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-1" value="&lt;h4&gt;Model-based Offline Meta-Reinforcement Learning with Regularization&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sen Lin, et.al : ICLR 2022)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="10" y="40" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-2" value="&lt;h1&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;fontSize=17;fontColor=#46495D;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="15" y="230" width="190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-5" value="&lt;h4&gt;The Reflective Explorer: Online Meta-Exploration from Offline Data in Realistic Robotic Tasks&lt;/h4&gt;&lt;h4&gt;(Chelsea Finn, et.al : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-595" vertex="1">
          <mxGeometry x="10" y="250" width="200" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-596" value="Meta-RL Offline Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-960" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-6" value="&lt;h4&gt;Offline Meta-RL with Online Self-Supervision&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, et.al : ICLR 2022 - Reject )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="5" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-7" value="&lt;h4&gt;Skill-based Meta-RL&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Taewook Nam, et.al : NIPS 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="5" y="250" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-8" value="&lt;h4&gt;Offline Meta-Learning of Exploration&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Ron Dorfman, et.al : Learning to Learn 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="6" y="440" width="203" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-9" value="&lt;h4&gt;Offline Meta-RL with Advantage Weighting&amp;nbsp;&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, Chelsea Finn et.al : ICLR 2021 Reject )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-596" vertex="1">
          <mxGeometry x="6" y="630" width="203" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-597" value="Meta-RL Offline Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-733" y="210" width="213" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-598" value="Meta-RL Offline Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-510" y="210" width="210" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-603" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-596" target="gYe92Rgtv7boX88liuPo-441" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-800" y="220" as="sourcePoint" />
            <mxPoint x="-750" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-604" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-597" target="gYe92Rgtv7boX88liuPo-605" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-510" y="340" as="sourcePoint" />
            <mxPoint x="-457.5" y="159.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-605" value="&lt;span&gt;&lt;b&gt;Hybrid&lt;/b&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-656.5" y="135" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-607" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-598" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-500" y="330" as="sourcePoint" />
            <mxPoint x="-450" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-610" value="Meta-RL Online Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;" parent="1" vertex="1">
          <mxGeometry x="-280" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-14" value="&lt;h4&gt;Accelerating Online Reinforcement Learning via Model-based Learning&lt;/h4&gt;&lt;h4&gt;(Sergey Levine, et.al : Learning to Learn 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-610" vertex="1">
          <mxGeometry x="7.5" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-15" value="&lt;h4&gt;Model-Based Reinforcement Learning via Meta-Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Pieter Abbeel, et.al : CoRR 2018 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-610" vertex="1">
          <mxGeometry x="7.5" y="230" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-611" value="Meta-RL Online Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="-50" y="210" width="230" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-612" value="Meta-RL Online Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;" parent="1" vertex="1">
          <mxGeometry x="190" y="210" width="220" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-613" value="Meta-RL Online Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="431" y="210" width="219" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-617" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-452" target="gYe92Rgtv7boX88liuPo-610" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-618" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-611" target="gYe92Rgtv7boX88liuPo-453" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-619" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-612" target="gYe92Rgtv7boX88liuPo-454" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-620" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-613" target="gYe92Rgtv7boX88liuPo-455" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="180" as="sourcePoint" />
            <mxPoint x="190" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-622" value="&lt;font style=&quot;font-size: 17px&quot;&gt;&lt;b&gt;RL&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1727.5" y="10" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-623" value="&lt;b&gt;Online&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2190" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-624" value="" style="endArrow=none;html=1;rounded=0;entryX=0.432;entryY=-0.027;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-622" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1910" y="250" as="sourcePoint" />
            <mxPoint x="2150" y="400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-625" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" target="gYe92Rgtv7boX88liuPo-627" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1770" y="40" as="sourcePoint" />
            <mxPoint x="1860" y="250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-626" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="822.5" y="135" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-627" value="&lt;b&gt;Offline&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1310" y="60" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-628" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-626" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="420" as="sourcePoint" />
            <mxPoint x="2070" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-629" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1090" y="135" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-630" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1575" y="135" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-631" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-629" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="320" as="sourcePoint" />
            <mxPoint x="2070" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-632" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;startArrow=none;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-630" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="320" as="sourcePoint" />
            <mxPoint x="2070" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-633" value="&lt;b&gt;Model-Based&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="1870" y="135" width="105" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-634" value="&lt;b&gt;Model-Free&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2070" y="135" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-635" value="&lt;b&gt;Hybrid&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2350" y="140" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-636" value="&lt;b&gt;Comparison&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#B2C9AB;strokeColor=#788AA3;fontColor=#46495D;" parent="1" vertex="1">
          <mxGeometry x="2640" y="140" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-637" value="" style="endArrow=none;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-633" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2070" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-638" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-634" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-639" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-635" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-640" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;strokeColor=#788AA3;fontColor=#46495D;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-636" target="gYe92Rgtv7boX88liuPo-623" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2020" y="220" as="sourcePoint" />
            <mxPoint x="2080" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-641" value="" style="endArrow=none;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#788AA3;fontColor=#46495D;" parent="1" source="gYe92Rgtv7boX88liuPo-627" target="gYe92Rgtv7boX88liuPo-649" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1770" y="130" as="sourcePoint" />
            <mxPoint x="1582.5" y="129.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-642" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-626" target="gYe92Rgtv7boX88liuPo-643" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1650" y="400" as="sourcePoint" />
            <mxPoint x="1140" y="270" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-643" value="RL Offline Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="760" y="210" width="245" height="1640" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-18" value="&lt;h4&gt;Offline RL with Reverse Model-based Imagination&lt;/h4&gt;&lt;h4&gt;(Baidu China : NIPS 2021 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="41" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-19" value="&lt;h4&gt;MOReL: Model-Based Offline RL&lt;/h4&gt;&lt;h4&gt;(Rahul Kidambi, et al. : NIPS 2020 )&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="230" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-4" value="&lt;h4&gt;Fine-tuning Offline Model-Based Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Adam Villaflor, et al. : ICLR 2021 - Reject)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="420" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-5" value="&lt;h4&gt;COMBO: Conservative Offline Model-Based Policy Optimization&lt;/h4&gt;&lt;h4&gt;(Chelsea Finn, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="610" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-6" value="&lt;h4&gt;Offline Model-based Adaptable Policy Learning&lt;/h4&gt;&lt;h4&gt;(Xiong-Hui Chen, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="810" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-7" value="&lt;h4&gt;Weighted Model Estimation for Offline Model-based Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;(Toru Hishinuma, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1010" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-8" value="&lt;h4&gt;Overcoming Model-Bias for Robust Offline Deep Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;(Phillip Swazinna, et al. : CoRR 2020)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1210" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-9" value="&lt;h4&gt;Behavioral Priors and Dynamics Models : Improving Performance and Domain Transfer in Offline RL&lt;/h4&gt;&lt;h4&gt;(Pieter Abbeel, et al. : NIPS 2021)&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;" parent="gYe92Rgtv7boX88liuPo-643" vertex="1">
          <mxGeometry x="20" y="1410" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-644" value="RL Offline Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1040" y="210" width="230" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-10" value="&lt;h4&gt;&lt;span&gt;Uncertainty-Based Offline RL with Diversified Q-Ensemble&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Gaon An: NIPS 2021 )&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=hidden;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;whiteSpace=wrap;" parent="gYe92Rgtv7boX88liuPo-644" vertex="1">
          <mxGeometry x="12.5" y="51" width="205" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-645" value="RL Offline Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1285" y="210" width="220" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-646" value="RL Offline Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1510" y="210" width="230" height="1650" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-11" value="&lt;h4&gt;&lt;span&gt;Comparing Model-Free and Model-Based Algorithms for Offline RL&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Phillip Swazinna: arxiv )&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Summary&lt;/b&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=block;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;whiteSpace=wrap;fillOpacity=100;arcSize=12;" parent="gYe92Rgtv7boX88liuPo-646" vertex="1">
          <mxGeometry x="6" y="41" width="215" height="170" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-647" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-644" target="gYe92Rgtv7boX88liuPo-629" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1240" y="220" as="sourcePoint" />
            <mxPoint x="1290" y="170" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-648" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-645" target="gYe92Rgtv7boX88liuPo-649" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1530" y="340" as="sourcePoint" />
            <mxPoint x="1582.5" y="159.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-649" value="&lt;span&gt;&lt;b&gt;Hybrid&lt;/b&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="1365" y="135" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-650" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-646" target="gYe92Rgtv7boX88liuPo-630" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1540" y="330" as="sourcePoint" />
            <mxPoint x="1590" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-651" value="RL Online Model-Based" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;" parent="1" vertex="1">
          <mxGeometry x="1770" y="210" width="600" height="2760" as="geometry" />
        </mxCell>
        <mxCell id="bVU3PEh5Btl0sVfo6UzQ-1" value="&lt;b&gt;&lt;span style=&quot;color: rgb(51 , 51 , 51) ; font-family: &amp;#34;noto sans&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgba(0 , 0 , 0 , 0.04)&quot;&gt;Self-Correcting Models for Model-Based Reinforcement Learning&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;br&gt;(&lt;span style=&quot;color: rgb(51 , 51 , 51) ; font-family: &amp;#34;noto sans&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgba(0 , 0 , 0 , 0.04)&quot;&gt;Erik Talvitie&lt;/span&gt;: AAAI 2017 )&lt;br&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openreview.net/forum?id=BkZEuTeOZr&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;When an agent cannot represent a perfectly accurate model of its environment&#39;s dynamics, model-based reinforcement learning (MBRL) can fail catastrophically. Planning involves composing the predictions of the model; when flawed predictions are composed, even minor errors can compound and render the model useless for planning.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;Hallucinated Replay&quot; trains the model to &quot;correct&#39; itself when it produces errors, substantially improving MBRL with flawed models.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Main contribution of this paper is that it theoretically analyzes this approach of &quot;Hallucinated Replay&quot;, illuminates settings in which it is likely to be effective or ineffective, and presents a novel error bound, showing that a model&#39;s ability to self-correct is more tightly related to MBRL performance than one-step prediction error.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;General MBRL approach is to learn a Model &lt;i&gt;P&lt;/i&gt;, approximating transition-dynamics P, and then to use the model to produce a policy via a planning algorithm. Note that it is given that we already know R.&lt;/li&gt;&lt;li&gt;State-Action Distribution Formulation.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;This paper claims (shows) models with similar one-step prediction error can vary wildly in their usefulness for planning. The true distinguisher is the accuracy of predictions far into the future.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" parent="gYe92Rgtv7boX88liuPo-651" vertex="1">
          <mxGeometry x="10" y="60" width="570" height="580" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-1" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Algorithmic Framework for Model-based Deep&lt;br&gt;Reinforcement Learning with Theoretical Guarantees&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(ICLR 2019; Tengyu Ma, et al.)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/forum?id=BJe1E2R5KX&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;MBRL which has advantage of sample-efficiency currently lacks theoretical understanding, for example as:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;How does the error of estimated model affect the estimation of the value function and the planning?&lt;/li&gt;&lt;li&gt;Can model-based RL algorithms be guaranteed to improve the policy monotonically and converge to a local maximum of the value function?&lt;/li&gt;&lt;li&gt;How do we quantify the uncertainty in the dynamical models?&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Previous theoretical work on MBRL were mostly focused on linear models (MDP, linear parameterizations) but not non-linear models.&lt;/li&gt;&lt;li&gt;Naturally, there was no previous algorithm with convergence guarantees for model-based &quot;deep&quot; RL.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Proposes a novel algorithmic framework for designing and analyzing &lt;b&gt;model-based &quot;deep&quot; RL&lt;/b&gt; algorithms with the guarantee to converge monotonically to a local maximum of the reward, also having the sample-efficiency advantage of MBRL.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;In terms of trying to design a MBRL algorithm which can achieve near-optimal reward on complicated tasks or real-world tasks sample-efficiently (using fewer samples), the author says it would be important to think about the &quot;trade-off&#39; between &quot;optimism and robustness&quot;.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" vertex="1" parent="gYe92Rgtv7boX88liuPo-651">
          <mxGeometry x="20" y="670" width="570" height="650" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-2" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Model Based Reinforcement Learning for Atari&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;ICLR 2020; Chelsea Finn, et al.&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=S1xCPJHtDB&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" vertex="1" parent="gYe92Rgtv7boX88liuPo-651">
          <mxGeometry x="15" y="1430" width="570" height="360" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-3" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Maximum Entropy Model-based Reinforcement Learning&lt;br&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(NIPS 2021; Oleg Svidchenko, et. al)&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=uBDG3yX-2sQ&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" vertex="1" parent="gYe92Rgtv7boX88liuPo-651">
          <mxGeometry x="15" y="1810" width="570" height="360" as="geometry" />
        </mxCell>
        <mxCell id="PJj0A61u5Oc_xkF32OBS-4" value="&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;Understanding the Asymptotic Performance of&lt;br&gt;Model-Based RL Methods&amp;nbsp;&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11.0pt ; line-height: 107% ; font-family: &amp;#34;calibri&amp;#34; , sans-serif&quot;&gt;(ICLR 2019 Not Accepted; William Whitney, et. al)&lt;/span&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;br&gt;Link:&lt;br&gt;&lt;/b&gt;https://openreview.net/pdf?id=B1g29oAqtm&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Motivation&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Contribution&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Technical Details&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Essence&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;General Ideas Obtained&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;fontStyle=4" vertex="1" parent="gYe92Rgtv7boX88liuPo-651">
          <mxGeometry x="20" y="2190" width="570" height="360" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-652" value="RL Online Model-Free" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="2430" y="220" width="210" height="310" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-653" value="RL Online Hybrid" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;startSize=23;labelPadding=0;autosize=1;" parent="1" vertex="1">
          <mxGeometry x="2700" y="210" width="670" height="5730" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-12" value="&lt;b&gt;Combining Model-Based and Model-Free Updates for Trajectory-Centric Reinforcement Learning&lt;br&gt;&lt;/b&gt;&lt;br&gt;(Sergey Levine: PMLR 2017 )&lt;br&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;http://proceedings.mlr.press/v70/chebotar17a/chebotar17a.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Instead of using DNN as policy approximator, this paper uses TVLG (&quot;Time-Varying-Linear- Gaussian&quot;)&amp;nbsp;Controllers as policy representation, which can process fast optimization with model-based LQR-FLM (&quot;Linear-Quadratic-Regulators-Fitted-Local-Models&quot;) and model-free PI^2 (&quot;Policy-Improvement-with-Path-Integrals&quot;) algorithms, using sample-based updates.&lt;/li&gt;&lt;li&gt;This is a hybrid algorithm based on the two components (LQR-FLM and PI^2) where the PI^2 update is performed on the residuals between the true sample-based cost and the cost estimated under the local linear models.&lt;/li&gt;&lt;li&gt;Procedure for optimizing time-varying linear gaussian (TVLG) policies that integrates both fast model-based updates via iterative linear-Gaussian model fitting and corrective model-free updates via the PI^2 framework.&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10" y="30" width="650" height="270" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-15" value="&lt;h4&gt;Temporal Difference Models: Model-Free Deep RL for Model-Based Control&lt;/h4&gt;(Sergey Levine: ICLR 2018)&lt;br&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/pdf/1802.09081.pdf&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;TDM (&quot;Temporal Difference Models&quot;) learns &quot;variable-horizon-goal-conditioned-value-functions&quot; which with shorter horizons it corresponds to a &quot;model&quot; and with longer horizons it corresponds to &quot;model-free&quot; approach.&amp;nbsp;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&quot;Goal-conditioned-value-functions&quot; learn to predict the value function for every possible goal state. That is, they answer the following question: what is the expected reward for reaching a particular state, given that the agent is attempting (to optimally as possible) to reach it? The particular choice of reward function determines what such a method actually does, but rewards based on distances to a goal hint at a connection to model-based learning: if we can predict how easy it is to reach any state from any current state, we must have some kind of understanding of the underlying &quot;physics.&quot;&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;This connection between model-based and model-free RL can be used to smoothly transition from learning models to learning policies, obtaining rich supervision from every sample to quickly gain a moderate level of proficiency, while still converging to an unbiased solution.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;u&gt;Important point is while other hybrid methods focus on combining different model-based and model-free RL techniques, this method proposes an &quot;equivalence&quot; between those two branches of RL through a special generalization of goal-conditioned value function.&lt;/u&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10" y="330" width="650" height="380" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-16" value="&lt;h4&gt;Model-Based Priors for Model-Free Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: CoRL 2017 : Retracted paper due to identification of similar work in the past after submission)&lt;/span&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/abs/1709.03153&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Bridges the gap between Model-Free and Model-based RL by first learning a probabilistic dynamics model then leveraging it as a prior for the interleaved model-free optimization.&amp;nbsp;&lt;/li&gt;&lt;li&gt;This approach learns a dynamics model from scratch which is used to compute the trajectory distribution corresponding to a given policy, which in turn can be used to estimate the cost of the policy. This estimate is used by a Bayesian Optimization-based Model-Free policy search to guide the policy optimization.&amp;nbsp;&lt;/li&gt;&lt;li&gt;This approach uses the Model-Based return estimates as a bias for Model-Free policy learning, but the Model-Based component is incorporated as a prior mean into a Bayesian model-free update, which allows this approach to reason about the confidence of the Model-Free estimates across the entire policy space.&lt;/li&gt;&lt;li&gt;This approach learns the dynamics model of the system, and uses Bayesian Optimization (which uses Gaussian Process as underlying objective function) to find optimal policy parameters.&lt;/li&gt;&lt;li&gt;Gaussian Process provides both the expected value of the function at any arbitrary point as well as a notion of uncertainty of this estimate.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This paper uses Gaussian Process within Bayesian Optimization to map policy parameters to predicted cost. Also Gaussian Process is used to learn the unknown dynamics model.&lt;/li&gt;&lt;li&gt;Central to the choice of Gaussian Process is its capability of explicitly modeling the uncertainty in the underlying function. This uncertainty allows to account for the model-bias in the dynamics model, and to deal with the exploration/exploitation trade-off in a principled manner in Bayesian Optimization.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="9.5" y="720" width="651" height="426" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-17" value="&lt;h4&gt;Model-Based Value Expansion for Model-Free Reinforcement Learning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: arxiv 2018)&lt;/span&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://arxiv.org/abs/1803.00101v1&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This paper proposes a &quot;model-based value expansion&quot; which controls for uncertainty in the model by only allowing imagination (virtual data generation) to a fixed depth.&lt;/li&gt;&lt;li&gt;This paper proposes a method that tries to reduce sample complexity while supporting complex non-linear dynamics by combining Model-Based and Model-Free learning techniques through disciplined model-use for value estimation.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Model is incorporated into the &quot;Q-value target estimation&quot;, making the model only required to make forward predictions.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;MVE (Model-Based Value Expansion) improves value estimates for a policy by assuming we have an approximate dynamical model ( f^{hat} ) and the true reward function ( R ).&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Such an improved value estimate can be used in training a critic for faster task-mastery in reward-dense environments.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="14" y="1160" width="651" height="330" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-23" value="&lt;h4&gt;&lt;span&gt;Predictive representations can link model-based reinforcement learning to model-free algorithms&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Evan M. Russek, et al.: pcbi 2017)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005768&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;br&gt;&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="14" y="3470" width="636" height="220" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-24" value="&lt;h4&gt;Look Before You Leap: Bridging Model-Free and Model-Based Reinforcement Learning for Planned-Ahead Vision-and-Language Navigation&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Xin Wang, et al.: ECCV 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openaccess.thecvf.com/content_ECCV_2018/html/Xin_Wang_Look_Before_You_ECCV_2018_paper.html&lt;br&gt;&lt;b&gt;&lt;br&gt;Summary:&lt;br&gt;&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10" y="3254" width="650" height="206" as="geometry" />
        </mxCell>
        <mxCell id="MQd3Vb3raP3wGZ8idbkK-1" value="&lt;h4&gt;Model-based learning retrospectively updates model-free values&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Max Doody, et al.: nature 2022)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;&lt;a href=&quot;https://www.nature.com/articles/s41598-022-05567-3.pdf&quot;&gt;Model-based learning retrospectively updates model-free values (nature.com)&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Hybrid of Model-based and Model-Free based on insight from neuro-science.&lt;/li&gt;&lt;li&gt;&quot;Two-stage decision task&quot; is utilized. In this task, participants make t&lt;u&gt;wo sequential decisions&lt;/u&gt; to obtain a reward.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Two concepts are traditionally used to think about &quot;model-based behavior&quot; in &quot;two stage decision task&quot;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;[Concept-1]&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&quot;model-based learning&quot;, which refers to 2 processes.&lt;/li&gt;&lt;li&gt;(process-1)&lt;/li&gt;&lt;li&gt;the learning of transitions and the structure of the task through state prediction errors (&#39;state-learning&#39;),&amp;nbsp;&lt;/li&gt;&lt;li&gt;(process-2)&lt;/li&gt;&lt;li&gt;subsequently, learning the value of the states at stage 2 (&#39;state value learning&#39;)&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;li&gt;These processes consequently result in the production and refinement of an internal model of the task structure.&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;[Concept-2]&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&quot;model-based decision making&quot;, refers to how participants make choices utilizing the model.&lt;/li&gt;&lt;li&gt;Traditional approach is: &quot;Forward Planning&quot; which model-based individuals use their internal model to &#39;prospectively&#39; assess which path is more likely, to lead to the stage-2 state with highest state-value.&lt;/li&gt;&lt;li&gt;However, this paper proposes the following:&lt;/li&gt;&lt;li&gt;&lt;b&gt;&amp;lt;Following is Key Ideas of paper&amp;gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;At the &#39;time of reward&#39;, subjects could &#39;retrospectively update&#39; the action value of the stage-1 choice depending on whether they received a common or rare transition trial. On the next trial, at the &#39;time of decision&#39;, the most valuable action would then be selected.&lt;/li&gt;&lt;li&gt;In this approach, reward is propagated back through the causal chain to the action that is most likely to lead to a reward, taking into account the transition probabilities.&lt;/li&gt;&lt;li&gt;At the core of such a process would be a type of model-based RPE (&#39;reward prediction error&#39;) that is used to update the value not of the chosen action, but rather of the action that most likely would have led to the current state.&lt;/li&gt;&lt;li&gt;&lt;b&gt;(Why this is MBMF): In the simplest case, this would generate a prediction error at the time of outcome relative to the model-free value of the action that &#39;commonly&#39; leads to the actual stage-2 state&lt;/b&gt;. &lt;b&gt;In other words, &quot;Backward-Planning&quot; could be used to update the stage-1 model-free values when reward is received&quot;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&quot;model-based update&quot;: &lt;/b&gt;reflecting whether the state encountered was likely or unlikely to follow the option (action) that was selected.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="12.5" y="1800" width="646" height="960" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-25" value="&lt;h4&gt;Neural Network Dynamics for Model-Based Deep Reinforcement Learning with Model-Free Fine-Tuning&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Sergey Levine, et al.: ICRA 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://ieeexplore.ieee.org/abstract/document/8463189&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This approach uses the model-based algorithm to initialize a model-free learner. The learned model-based controller (which uses MPC for its own training) provides good rollouts, which enable supervised initialization of a policy (&quot;imitation policy&quot;) that can then be fine-tuned with model-free algorithms (such as policy-gradients).&lt;/li&gt;&lt;li&gt;This paper demonstrates effective model-based reinforcement learning with neural-network models. Note that it was difficult to combine model-based algorithms with high-capacity and expressive deep neural networks.&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="10.5" y="1530" width="650" height="246" as="geometry" />
        </mxCell>
        <mxCell id="bVU3PEh5Btl0sVfo6UzQ-5" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" parent="gYe92Rgtv7boX88liuPo-653" vertex="1">
          <mxGeometry x="70" y="2410" width="520" height="328" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-654" value="RL Online Comparison" style="swimlane;rounded=0;labelBackgroundColor=none;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;gradientColor=none;" parent="1" vertex="1">
          <mxGeometry x="3410" y="196" width="280" height="550" as="geometry" />
        </mxCell>
        <mxCell id="JIbpB6RPbDgucNRNDlhD-26" value="&lt;h4&gt;&lt;span&gt;Model-based versus Model-free Deep Reinforcement Learning for Autonomous Racing Cars&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Axel Brunnbauer, et al.: CoRR 2021)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://openreview.net/forum?id=-JD17JdqLS-&lt;br&gt;&lt;b&gt;&lt;br&gt;Summary:&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-654" vertex="1">
          <mxGeometry x="5" y="30" width="270" height="220" as="geometry" />
        </mxCell>
        <mxCell id="MQd3Vb3raP3wGZ8idbkK-3" value="&lt;h4&gt;Overcoming the limits of Deep Reinforcement Learning with Model-Based approach&lt;/h4&gt;&lt;h4&gt;&lt;span style=&quot;font-weight: normal&quot;&gt;(Luca Sorrentino, et al.: ICRA 2018)&lt;/span&gt;&lt;br&gt;&lt;/h4&gt;&lt;br&gt;&lt;b&gt;Link:&lt;/b&gt;&amp;nbsp;&lt;br&gt;https://drlux.github.io/planpix.html&lt;br&gt;&lt;br&gt;&lt;b&gt;Summary:&lt;/b&gt;" style="text;strokeColor=#82b366;fillColor=#d5e8d4;spacing=5;spacingTop=-20;overflow=fill;rounded=0;labelBackgroundColor=none;sketch=0;resizeHeight=1;labelBorderColor=none;resizeWidth=1;expand=0;whiteSpace=wrap;html=1;noLabel=0;portConstraint=east;strokeOpacity=100;container=0;autosize=0;" parent="gYe92Rgtv7boX88liuPo-654" vertex="1">
          <mxGeometry x="5" y="260" width="270" height="220" as="geometry" />
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-655" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-633" target="gYe92Rgtv7boX88liuPo-651" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-656" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-652" target="gYe92Rgtv7boX88liuPo-634" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-657" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-653" target="gYe92Rgtv7boX88liuPo-635" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gYe92Rgtv7boX88liuPo-658" value="" style="endArrow=none;html=1;rounded=1;sketch=0;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;curved=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="gYe92Rgtv7boX88liuPo-654" target="gYe92Rgtv7boX88liuPo-636" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2180" y="180" as="sourcePoint" />
            <mxPoint x="2230" y="130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="QpMWJNPEq7iUGMKIBiDv-12" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=16;fontColor=#46495D;strokeColor=#788AA3;fillColor=#B2C9AB;" parent="1" source="gYe92Rgtv7boX88liuPo-443" target="gYe92Rgtv7boX88liuPo-443" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="bzl5pQCeSIIHdRTmGfzq" name="Page-2">
    <mxGraphModel dx="1038" dy="578" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1600" math="0" shadow="0">
      <root>
        <mxCell id="8M8-kAXXJRxwidWSKrvp-0" />
        <mxCell id="8M8-kAXXJRxwidWSKrvp-1" parent="8M8-kAXXJRxwidWSKrvp-0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="oJh7pulkx8uXrgoTtmST" name="Page-3">
    <mxGraphModel dx="1098" dy="578" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="mZWKZbCyyWdYkMpsQZp2-0" />
        <mxCell id="mZWKZbCyyWdYkMpsQZp2-1" parent="mZWKZbCyyWdYkMpsQZp2-0" />
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
